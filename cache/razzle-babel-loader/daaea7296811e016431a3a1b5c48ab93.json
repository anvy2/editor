{"ast":null,"code":"import _assertThisInitialized from \"/Users/anvy/Desktop/chatteron/temp/new/node_modules/.pnpm/@babel+runtime@7.14.6/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classPrivateFieldGet from \"/Users/anvy/Desktop/chatteron/temp/new/node_modules/.pnpm/@babel+runtime@7.14.6/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet\";\nimport _classPrivateFieldSet from \"/Users/anvy/Desktop/chatteron/temp/new/node_modules/.pnpm/@babel+runtime@7.14.6/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet\";\nimport _classCallCheck from \"/Users/anvy/Desktop/chatteron/temp/new/node_modules/.pnpm/@babel+runtime@7.14.6/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anvy/Desktop/chatteron/temp/new/node_modules/.pnpm/@babel+runtime@7.14.6/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/anvy/Desktop/chatteron/temp/new/node_modules/.pnpm/@babel+runtime@7.14.6/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/anvy/Desktop/chatteron/temp/new/node_modules/.pnpm/@babel+runtime@7.14.6/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/anvy/Desktop/chatteron/temp/new/node_modules/.pnpm/@babel+runtime@7.14.6/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/anvy/Desktop/chatteron/temp/new/node_modules/.pnpm/@babel+runtime@7.14.6/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"/Users/anvy/Desktop/chatteron/temp/new/node_modules/.pnpm/@babel+runtime@7.14.6/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/anvy/Desktop/chatteron/temp/new/src/Editor/index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Quill from \"quill\";\nimport EditorStyles from \"./Styles\";\nimport * as Emoji from \"quill-emoji\";\nhljs.configure({\n  languages: [\"javascript\", \"python\"]\n});\nvar BlockEmbed = Quill[\"import\"](\"blots/block/embed\");\n\nvar highlightCode = function highlightCode(text) {\n  return hljs.highlightAuto(text).value;\n};\n\nvar CustomCode = /*#__PURE__*/function (_BlockEmbed) {\n  _inherits(CustomCode, _BlockEmbed);\n\n  var _super = _createSuper(CustomCode);\n\n  function CustomCode() {\n    _classCallCheck(this, CustomCode);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CustomCode, null, [{\n    key: \"create\",\n    value: function create(value) {\n      var node = _get(_getPrototypeOf(CustomCode), \"create\", this).call(this, value);\n\n      var code = document.createElement(\"code\");\n      code.innerHTML = highlightCode(value);\n      node.appendChild(code);\n      return node;\n    }\n  }, {\n    key: \"value\",\n    value: function value(node) {\n      console.log(\"Requesting a value: \", node.textContent);\n      return node.textContent;\n    }\n  }]);\n\n  return CustomCode;\n}(BlockEmbed);\n\n_defineProperty(CustomCode, \"blotName\", \"code-custom\");\n\n_defineProperty(CustomCode, \"tagName\", \"pre\");\n\n_defineProperty(CustomCode, \"className\", \"ql-syntax\");\n\nvar _quill = /*#__PURE__*/new WeakMap();\n\nvar Editor = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Editor, _React$PureComponent);\n\n  var _super2 = _createSuper(Editor);\n\n  function Editor(props) {\n    var _this;\n\n    _classCallCheck(this, Editor);\n\n    _this = _super2.call(this, props);\n\n    _quill.set(_assertThisInitialized(_this), {\n      writable: true,\n      value: void 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function () {\n      if (_this.props.converter) {\n        _this.props.setText(_this.props.converter.translate(_classPrivateFieldGet(_assertThisInitialized(_this), _quill).root.innerHTML));\n      } else {\n        _this.props.setText(_classPrivateFieldGet(_assertThisInitialized(_this), _quill).root.innerHTML);\n      }\n    });\n\n    _this.state = {};\n    Quill.register(CustomCode);\n    Quill.register(\"modules/emoji\", Emoji);\n    return _this;\n  }\n\n  _createClass(Editor, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      _classPrivateFieldSet(this, _quill, new Quill(\"#editor-container\", {\n        modules: {\n          toolbar: {\n            container: [[{\n              header: [1, 2, false]\n            }], [\"bold\", \"italic\", \"underline\"], [\"image\", \"code-block\"], [\"emoji\"]],\n            handlers: {\n              emoji: function emoji() {}\n            }\n          },\n          \"emoji-toolbar\": this.props.theme === 'snow',\n          \"emoji-textarea\": this.props.theme === 'bubble',\n          \"emoji-shortname\": true\n        },\n        placeholder: \"Compose an epic...\",\n        theme: this.props.theme // or 'bubble'\n\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(EditorStyles, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        className: \"editor__wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        id: \"editor-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      })), __jsx(\"button\", {\n        className: \"submit__button\",\n        onClick: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }\n      }, \"Submit\"));\n    }\n  }]);\n\n  return Editor;\n}(React.PureComponent);\n\nexport default Editor;","map":{"version":3,"sources":["/Users/anvy/Desktop/chatteron/temp/new/src/Editor/index.tsx"],"names":["React","Quill","EditorStyles","Emoji","hljs","configure","languages","BlockEmbed","highlightCode","text","highlightAuto","value","CustomCode","node","code","document","createElement","innerHTML","appendChild","console","log","textContent","Editor","props","converter","setText","translate","root","state","register","modules","toolbar","container","header","handlers","emoji","theme","placeholder","handleSubmit","PureComponent"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Quill from \"quill\";\n\nimport EditorStyles from \"./Styles\";\nimport * as Emoji from \"quill-emoji\";\n\nimport {NodeHtmlMarkdown} from \"node-html-markdown\";\n\nhljs.configure({\n  languages: [\"javascript\", \"python\"]\n});\n\nconst BlockEmbed = Quill.import(\"blots/block/embed\");\n\nconst highlightCode = (text: string) => hljs.highlightAuto(text).value;\n\n\nclass CustomCode extends BlockEmbed {\n  static blotName = \"code-custom\";\n  static tagName = \"pre\";\n  static className = \"ql-syntax\";\n\n  static create(value: any) {\n    let node = super.create(value);\n    const code = document.createElement(\"code\");\n    code.innerHTML = highlightCode(value);\n    node.appendChild(code);\n    return node;\n  }\n\n  static value(node: HTMLElement) {\n    console.log(\"Requesting a value: \", node.textContent);\n    return node.textContent;\n  }\n}\n\n\n\n\nexport interface IProps {\n  theme: string;\n  setText: (text: string) => void;\n  converter?: NodeHtmlMarkdown;\n}\nexport interface IState {}\n\nclass Editor extends React.PureComponent<Readonly<IProps>, IState> {\n  #quill: any;\n  constructor(props: Readonly<IProps>) {\n    super(props);\n    this.state = {};\n    Quill.register(CustomCode);\n    Quill.register(\"modules/emoji\", Emoji);\n  }\n\n  componentDidMount() {\n    this.#quill = new Quill(\"#editor-container\", {\n      modules: {\n        toolbar: {\n          container: [\n            [{ header: [1, 2, false] }],\n            [\"bold\", \"italic\", \"underline\"],\n            [\"image\", \"code-block\"],\n            [\"emoji\"],\n          ],\n          handlers: { emoji: function () {} },\n        },\n        \"emoji-toolbar\": this.props.theme === 'snow',\n        \"emoji-textarea\": this.props.theme === 'bubble',\n        \"emoji-shortname\": true,\n      },\n      placeholder: \"Compose an epic...\",\n      theme: this.props.theme, // or 'bubble'\n    });\n  }\n\n  handleSubmit = () => {\n    if(this.props.converter) {\n      this.props.setText(this.props.converter.translate(this.#quill.root.innerHTML));\n    }\n    else {\n      this.props.setText(this.#quill.root.innerHTML);\n    }\n  }\n\n  render() {\n    return (\n      <EditorStyles>\n\n        <div className=\"editor__wrap\">\n          <div id=\"editor-container\"></div>\n        </div>\n        <button className=\"submit__button\" onClick={this.handleSubmit}>Submit</button>\n      </EditorStyles>\n    );\n  }\n}\n\nexport default Editor;\n"]},"metadata":{},"sourceType":"module"}